syntax = "proto3";
package wuxiaworld.api.v2;

import public "google/protobuf/wrappers.proto";

message NovelChapterInfo {
    ChapterItem firstChapter = 1;
    ChapterItem latestChapter = 2;
    google.protobuf.Int32Value chapterCount = 3;
    repeated ChapterGroupItem chapterGroups = 4;
}

message NovelItem {
    int32 id  = 1;
    string name = 2;
    google.protobuf.StringValue coverUrl = 10;
    google.protobuf.StringValue authorName = 13;
    NovelChapterInfo chapterInfo = 23;
}

message ChapterItem {
    int32 entityId = 1;
    string name = 2;
    string slug = 3;
    google.protobuf.StringValue content = 5;
    int32 novelId = 6;
    google.protobuf.StringValue translatorThoughts = 19;
}

message ChapterGroupItem {
    int32 id = 1;
    string title = 2;
    int32 order = 3;
    repeated ChapterItem chapterList = 6;
}

message GetChapterByProperty {
    oneof byProperty {
        int32 chapterId = 1;
        ByNovelAndChapterSlug slugs = 2;
    }

    message ByNovelAndChapterSlug {
        string novelSlug = 1;
        string chapterSlug = 2;
    }
}

message GetNovelRequest {
    oneof selector {
        int32 id = 1;
        string slug = 2;
    }
}

message GetNovelResponse {
    NovelItem item = 1;
}

message GetChapterListRequest {
    int32 novelId = 1;
    FilterChapters filter = 2;

    message FilterChapters {
        google.protobuf.Int32Value chapterGroupId = 1;
        google.protobuf.BoolValue isAdvanceChapter = 2;
    }
}

message GetChapterListResponse {
    repeated ChapterGroupItem items = 1;
}

message GetChapterRequest {
    GetChapterByProperty chapterProperty = 1;
}

message GetChapterResponse {
    ChapterItem item = 1;
}

message UnlockedItem {
    oneof id {
        int32 novelId = 2;
        int32 chapterId = 3;
    }
}

enum UnlockItemMethod {
    UnlockMethodNone = 0;
    UnlockMethodKarma = 1;
    UnlockMethodVip = 2;
    UnlockMethodSponsor = 3;
}

message UnlockItemRequest {
    UnlockItemMethod unlockMethod = 1;
    UnlockedItem item = 2;
}

message UnlockItemResponse {
    UnlockedItem unlockedItem = 1;
}

service Novels {
    rpc GetNovel(GetNovelRequest) returns (GetNovelResponse);
}

service Chapters {
    rpc GetChapterList(GetChapterListRequest) returns (GetChapterListResponse);
    rpc GetChapter(GetChapterRequest) returns (GetChapterResponse);
}

service Unlocks {
    rpc UnlockItem(UnlockItemRequest) returns (UnlockItemResponse);
}
